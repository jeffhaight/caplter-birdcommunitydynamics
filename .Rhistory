SAVI_std = (SAVI - mean(SAVI, na.rm = TRUE))/sd(SAVI, na.rm = TRUE),
LST_std = (LST - mean(LST, na.rm = TRUE))/sd(LST, na.rm = TRUE),
LST_prevsum_std = (LST_prevsum - mean(LST_prevsum, na.rm = TRUE))/sd(LST_prevsum, na.rm = TRUE),
ppt_sum_std = (ppt_sum - mean(ppt_sum, na.rm = TRUE))/sd(ppt_sum, na.rm = TRUE),
ppt_sum_prevsum_std = (ppt_sum_prevsum - mean(ppt_sum_prevsum, na.rm = TRUE))/sd(ppt_sum_prevsum, na.rm = TRUE),
temp_max_std = (temp_max - mean(temp_max, na.rm = TRUE))/sd(temp_max, na.rm = TRUE),
temp_max_prevsum_std = (temp_max_prevsum - mean(temp_max_prevsum, na.rm = TRUE))/sd(temp_max_prevsum, na.rm = TRUE),
temp_min_std = (temp_min - mean(temp_min, na.rm = TRUE))/sd(temp_min, na.rm = TRUE),
temp_min_prevsum_std = (temp_min_prevsum - mean(temp_min_prevsum, na.rm = TRUE))/sd(temp_min_prevsum, na.rm = TRUE),
# NDBI_sd_std = (NDBI_sd - mean(NDBI_sd, na.rm = TRUE))/sd(NDBI_sd, na.rm = TRUE),
# NDVI_sd_std = (NDVI_sd - mean(NDVI_sd, na.rm = TRUE))/sd(NDVI_sd, na.rm = TRUE),
# LST_sd_std = (LST_sd - mean(LST_sd, na.rm = TRUE))/sd(LST_sd, na.rm = TRUE),
year_diff = survey_year - min(survey_year),
year_std = (year_diff - mean(year_diff, na.rm = TRUE))/sd(year_diff, na.rm = TRUE),
id = 1:length(site_code),
.by = c(season)) #%>% ungroup()
data.env.model  %>% arrange(id)
data.env.model  %>%
# group to standardize by season, since seasons will be modeled separately
# group_by(season) %>%
reframe(
year_mean = mean(year_diff, na.rm = TRUE),
year_sd = sd(year_diff, na.rm = TRUE),
NDBI_mean = mean(NDBI, na.rm = TRUE),
NDBI_sd = sd(NDBI, na.rm = TRUE),
NDVI_mean = mean(NDVI, na.rm = TRUE),
NDVI_sd = sd(NDVI, na.rm = TRUE),
NDVI_prevsum_mean = mean(NDVI_prevsum, na.rm = TRUE),
NDVI_prevsum_sd = sd(NDVI_prevsum, na.rm = TRUE),
LST_mean = mean(LST, na.rm = TRUE),
LST_sd = sd(LST, na.rm = TRUE),
LST_prevsum_mean = mean(LST_prevsum, na.rm = TRUE),
LST_prevsum_sd = sd(LST_prevsum, na.rm = TRUE),
ppt_sum_mean = mean(ppt_sum, na.rm = TRUE),
ppt_sum_sd = sd(ppt_sum, na.rm = TRUE),
ppt_sum_prevsum_mean = mean(ppt_sum_prevsum, na.rm = TRUE),
ppt_sum_prevsum_sd = sd(ppt_sum_prevsum),
# id = 1:length(site_code),
.by = c(season)) #%>% ungroup()
# Winter data
data.win <- left_join(data.div, data.env.model) %>%
drop_na(rich) %>% # drop the rows without bird data
ungroup() %>%
filter(season == "1_winter")
# data.win
# Spring data
data.spr <- left_join(data.div, data.env.model) %>%
drop_na(rich) %>% # drop the rows without bird data
ungroup() %>%
# group_by(survey_year, season) %>%  # standardize by year and/or season?
filter(season == "2_spring")
# data.spr
# add winter variables to the spring data
data.spr$NDBI_winter <- data.win$NDBI
data.spr$NDBI_winter_std <- data.win$NDBI_std
data.spr$NDVI_winter <- data.win$NDVI
data.spr$NDVI_winter_std <- data.win$NDVI_std
data.spr$LST_winter <- data.win$LST
data.spr$LST_winter_std <- data.win$LST_std
data.spr$temp_max_winter <- data.win$temp_max
data.spr$temp_max_winter_std <- data.win$temp_max_std
# data.spr$temp_min_winter <- data.win$temp_min
data.spr$temp_min_winter_std <- data.win$temp_min_std
data.spr$ppt_sum_winter <- data.win$ppt_sum
data.spr$ppt_sum_winter_std <- data.win$ppt_sum_std
length(unique(
data.win$site_code
))
range(data.win$survey_year)
range(data.spr$survey_year)
# winter NDBI vs spring NDVI
ggplot(data.spr, aes(x = NDBI_winter, y = NDVI)) +
theme_classic() +
geom_point() +
geom_smooth(method = "lm")+
# scale_color_brewer(palette = "Dark2") +
stat_cor(method = "spearman", cor.coef.name = "rho", p.accuracy = 0.001, r.accuracy = 0.001, color = "black") +
labs(x = "Winter NDBI", y = "Spring NDVI")
# include some of the detection
birdtraits.obs <- obs %>%
# calculate a global average abundance as the mean count per survey/site/year
group_by(code) %>% mutate(abundance_mean = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code, season, survey_year) %>% mutate(abundance_tot = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code) %>% mutate(abundance_mean = mean(abundance_tot, na.rm = TRUE)) %>%
group_by(code, season) %>% slice(1) %>%
select(c(
common_name, sci_name, nombre_comun_MX,  code, season,
det_project, det_season, abundance_mean,
SeedDisperser, Insectivore, Pollinator, woodpecker, Friend, Neighbor)) %>% # everything should be the same here except det_season
pivot_wider(names_from = season, names_prefix = "det_", values_from = det_season) %>%
select( # use select to reorder the columns
common_name,  #nombre_comun_MX,
sci_name,code,
det_project, det_1_winter, det_2_spring, abundance_mean,
SeedDisperser, Insectivore, Pollinator, #woodpecker, Friend, Neighbor #det_season,
) %>% arrange(common_name)
birdtraits.obs <- obs %>%
# calculate a global average abundance as the mean count per survey/site/year
group_by(code) %>% mutate(abundance_mean = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code, season, survey_year) %>% mutate(abundance_tot = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code) %>% mutate(abundance_mean = mean(abundance_tot, na.rm = TRUE)) %>%
group_by(code, season) %>% slice(1) %>%
select(c(
common_name, sci_name, nombre_comun_MX,  code, season,
det_project, det_season, abundance_mean,
SeedDisperser, Insectivore, Pollinator, woodpecker)) %>% # everything should be the same here except det_season
pivot_wider(names_from = season, names_prefix = "det_", values_from = det_season) %>%
select( # use select to reorder the columns
common_name,  #nombre_comun_MX,
sci_name,code,
det_project, det_1_winter, det_2_spring, abundance_mean,
SeedDisperser, Insectivore, Pollinator, #woodpecker, Friend, Neighbor #det_season,
) %>% arrange(common_name)
birdtraits.obs <- obs %>%
# calculate a global average abundance as the mean count per survey/site/year
group_by(code) %>% mutate(abundance_mean = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code, season, survey_year) %>% mutate(abundance_tot = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code) %>% mutate(abundance_mean = mean(abundance_tot, na.rm = TRUE)) %>%
group_by(code, season) %>% slice(1) %>%
select(c(
common_name, sci_name, code, season,
det_project, det_season, abundance_mean,
SeedDisperser, Insectivore, Pollinator, woodpecker)) %>% # everything should be the same here except det_season
pivot_wider(names_from = season, names_prefix = "det_", values_from = det_season) %>%
select( # use select to reorder the columns
common_name,  #nombre_comun_MX,
sci_name,code,
det_project, det_1_winter, det_2_spring, abundance_mean,
SeedDisperser, Insectivore, Pollinator, #woodpecker, Friend, Neighbor #det_season,
) %>% arrange(common_name)
birdtraits.obs <- obs %>%
# calculate a global average abundance as the mean count per survey/site/year
group_by(code) %>% mutate(abundance_mean = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code, season, survey_year) %>% mutate(abundance_tot = mean(count_mean, na.rm = TRUE)) %>%
# group_by(code) %>% mutate(abundance_mean = mean(abundance_tot, na.rm = TRUE)) %>%
group_by(code, season) %>% slice(1) %>%
select(c(
common_name, sci_name, code, season,
det_project, det_season, abundance_mean,
SeedDisperser, Insectivore, Pollinator)) %>% # everything should be the same here except det_season
pivot_wider(names_from = season, names_prefix = "det_", values_from = det_season) %>%
select( # use select to reorder the columns
common_name,  #nombre_comun_MX,
sci_name,code,
det_project, det_1_winter, det_2_spring, abundance_mean,
SeedDisperser, Insectivore, Pollinator, #woodpecker, Friend, Neighbor #det_season,
) %>% arrange(common_name)
birdtraits.obs$det_1_winter[which(is.na(birdtraits.obs$det_1_winter) == TRUE)] <- 0
birdtraits.obs$det_2_spring[which(is.na(birdtraits.obs$det_2_spring) == TRUE)] <- 0
birdtraits.obs %>% filter(Pollinator == 1)
write.csv((birdtraits.obs %>% filter(code %in% spp.known)), "./figures/supplementarytable_specieslist_known.csv", row.names = FALSE)
write.csv((birdtraits.obs %>% filter(code %in% spp.known)), "~/GitHub/caplter-birdcommunitydynamics/figures/supplementarytable_specieslist_known.csv", row.names = FALSE)
write.csv((birdtraits.obs %>% filter(code %in% spp.unknown)), "~/GitHub/caplter-birdcommunitydynamics/figures/supplementarytable_specieslist_unknown.csv", row.names = FALSE)
rm(
bird.clim, bird.clim.annual, bird.ls, bird.ls.sd, bird.ls.annual, data.env.prevsummer, data.env.prevyear, obs.all,
bird.pts, birdtraits.all,
var.cont, # g.waterfowl, g.wood, g.cluster, g.cultural, g.hab, # g.inv, g.seed, g.pollen,
beta.s, beta.t, beta.mean, beta.sd,
spe, time_lag_yr, crs.utm
)
save.image(file = "~/GitHub/caplter-birdcommunitydynamics/data/modelinputs_CAPbirds2024.RData")
hist(data.win$abundance, breaks = 100)
hist(data.win$abund_weight_con, breaks = 100)
hist(data.win$abundance, breaks = 100)
hist(data.win$rich, breaks = 30)
# hist(data.win$beta_s_mean, breaks = 30)
# hist(data.win$H, breaks = 20)
# hist(data.win$evenness, breaks = 20)
hist(data.spr$abundance, breaks = 100)
hist(data.spr$rich, breaks = 30)
# hist(data.spr$beta_s_mean, breaks = 30)
# Waterfowl abundance
# there are three survey periods in which abundance is quite high
# data.win %>% filter(abundance > 100)
# data.spr %>% filter(abundance > 100)
# Seed disperser abundance
hist(data.win$abund_SeedDisp)
hist(data.win$rich_SeedDisp)
hist(data.spr$abund_SeedDisp)
hist(data.spr$rich_SeedDisp)
# Hummingbird abundance
hist(data.win$abund_pollen, breaks = 8)
hist(data.win$rich_pollen, breaks = 20)
hist(data.spr$abund_pollen, breaks = 100)
hist(data.spr$rich_pollen, breaks = 20)
# Woodpecker abundance
hist(data.win$abund_woodpeck)
hist(data.win$abundance, breaks = 100)
hist(data.win$rich, breaks = 30)
# hist(data.win$beta_s_mean, breaks = 30)
# hist(data.win$H, breaks = 20)
# hist(data.win$evenness, breaks = 20)
hist(data.spr$abundance, breaks = 100)
hist(data.spr$rich, breaks = 30)
# hist(data.spr$beta_s_mean, breaks = 30)
# Waterfowl abundance
# there are three survey periods in which abundance is quite high
# data.win %>% filter(abundance > 100)
# data.spr %>% filter(abundance > 100)
# Seed disperser abundance
hist(data.win$abund_SeedDisp)
hist(data.win$rich_SeedDisp)
hist(data.spr$abund_SeedDisp)
hist(data.spr$rich_SeedDisp)
# Pollinator abundance
hist(data.win$abund_pollen, breaks = 8)
hist(data.win$rich_pollen, breaks = 20)
hist(data.spr$abund_pollen, breaks = 100)
hist(data.spr$rich_pollen, breaks = 20)
var.cont <- data.frame((data.env %>% filter(season %in% c("1_winter", "2_spring")))) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
NDVI, NDVI_prevsum, #SAVI, MNDWI,
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
#temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,
# NDBI_sd,
# NDVI_sd,        # highly correlated with NDBI_sd
# LST_sd,
# abundance, rich,
survey_year
))
corplot.all <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
corplot.all
./figures
var.cont <- data.frame(data.win) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
NDVI, NDVI_prevsum, #SAVI, MNDWI,
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,
# NDBI_sd,
# NDVI_sd,
# LST_sd,
abundance, rich,
survey_year
))
corplot1 <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
var.cont <- data.frame(data.spr) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
# NDVI,
#SAVI, MNDWI,
# NDBI_sd,    # highly correlated with LST_sd and NDVI_prevsum
# NDVI_sd,
# LST_sd,
NDVI_prevsum,   # highly correlated with NDBI
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,   # r > 0.6 with temp_max and temp_max_t0
# NDVI_winter,
# LST_winter,
# ppt_sum_winter, # r = -0.62 with temp_max_winter
# temp_max_winter,
# temp_min_winter,
abundance, rich,
survey_year
))
corplot2 <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
corplot1
corplot2
# the monsoon seasons has become hotter and wetter?
plot((data.win$survey_year-1), data.win$ppt_sum_prevsum)
plot((data.win$survey_year-1), data.win$LST_prevsum)
ggsave("~/GitHub/caplter-birdcommunitydynamics/figures/collinearity_envvariables_corebirds_1winter.png",
corplot1,
width = 6,
height = 4,
units = "in",
dpi = 300)
ggsave("~/GitHub/caplter-birdcommunitydynamics/figures/collinearity_envvariables_corebirds_2spring.png",
corplot2,
width = 6,
height = 4,
units = "in",
dpi = 300)
var.cont <- data.frame(data.win) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
NDVI, NDVI_prevsum, #SAVI, MNDWI,
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,
# NDBI_sd,
# NDVI_sd,
# LST_sd,
abundance, rich,
survey_year
))
corplot1 <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
var.cont <- data.frame(data.spr) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
# NDVI,
#SAVI, MNDWI,
# NDBI_sd,    # highly correlated with LST_sd and NDVI_prevsum
# NDVI_sd,
# LST_sd,
NDVI_prevsum,   # highly correlated with NDBI
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,   # r > 0.6 with temp_max and temp_max_t0
# NDVI_winter,
# LST_winter,
# ppt_sum_winter, # r = -0.62 with temp_max_winter
# temp_max_winter,
# temp_min_winter,
abundance, rich,
survey_year
))
corplot2 <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
corplot1
corplot2
# the monsoon seasons has become hotter and wetter?
plot((data.win$survey_year-1), data.win$ppt_sum_prevsum)
plot((data.win$survey_year-1), data.win$LST_prevsum)
ggsave("~/GitHub/caplter-birdcommunitydynamics/figures/collinearity_envvariables_corebirds_1winter.png",
corplot1,
width = 6,
height = 4,
units = "in",
dpi = 300)
ggsave("~/GitHub/caplter-birdcommunitydynamics/figures/collinearity_envvariables_corebirds_2spring.png",
corplot2,
width = 6,
height = 4,
units = "in",
dpi = 300)
var.cont <- data.frame((data.env %>% filter(season %in% c("1_winter", "2_spring")))) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
NDVI, NDVI_prevsum, #SAVI, MNDWI,
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
#temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,
# NDBI_sd,
# NDVI_sd,        # highly correlated with NDBI_sd
# LST_sd,
# abundance, rich,
survey_year
))
corplot.all <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
corplot.all
# Test models for environmental data
# NDBI
glm.test <- glm(NDBI ~ year_diff, data = data.win)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
glm.test <- glm(NDBI ~ year_diff, data = data.spr)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
# clearly, there's lots of variance in NDBI among sites, especially during spring
# NDVI
glm.test <- glm(NDVI ~ year_diff, data = data.win)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
glm.test <- glm(NDVI ~ year_diff, data = data.spr)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
# similar to NDBI, but inverse
glm.test <- glm(LST ~ year_diff, data = data.win)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
glm.test <- glm(LST ~ year_diff, data = data.spr)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
# some variance in land surface temperature among sites during spring for sure
glm.test <- glm(ppt_sum ~ year_diff, data = data.win)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
glm.test <- glm(ppt_sum ~ year_diff, data = data.spr)
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
# not a lot of among-site variance in precipitation in spring, but there is some in winter
# Test models for abundance and richness
glm.test <- glm(abundance ~ NDBI_std, data = data.win, family = "nbinom2")
# Test models for abundance and richness
glm.test <- glm(abundance ~ NDBI_std, data = data.win, family = "nbinom2")
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
plot(glm.test.resid ~ as.factor(data.win$survey_year))
# Test models for abundance and richness
glm.test <- glm(abundance ~ NDBI_std, data = data.win, family = "nbinom2")
# Test models for abundance and richness
glm.test <- glm(abundance ~ NDBI_std, data = data.win, family = "nbinom")
# Test models for abundance and richness
glm.test <- glm(abundance ~ NDBI_std, data = data.win, family = "nbinom2")
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
plot(glm.test.resid ~ as.factor(data.win$survey_year))
glm.test <- glm(rich ~ NDBI_std, data = data.win, family = "poisson")
glm.test.resid <- rstandard(glm.test)
plot(glm.test.resid ~ as.factor(data.win$site_code))
plot(glm.test.resid ~ as.factor(data.win$survey_year))
# data.win %>% filter(abundance > 100)
# obs %>% filter(abundance_tot > 100)
# obs.all %>% filter(count_max > 10)
```
glm(rich ~ survey_year + NDBI_std + LST_std + LST_prevsum_std, data = data.win, family = "poisson") %>% summary()
# Function for testing model overdispersion (Bolker et al. 2011)
# Tests whether the ratio is signficantly > 1. If so,
# we need to model a different distribution where the variance increases more rapidly than the mean.
# https://rdrr.io/github/markushuff/PsychHelperFunctions/src/R/overdisp_fun.R
# http://bbolker.github.io/mixedmodels-misc/glmmFAQ.html
# Referenced in https://r.qcbs.ca/workshop07/book-en/poisson-glmm.html
overdisp_fun <- function(model) {
## number of variance parameters in
##   an n-by-n variance-covariance matrix
vpars <- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df <- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
rdf <- nrow(model.frame(model))-model.df
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
var.cont <- data.frame(data.win) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
NDVI, NDVI_prevsum, #SAVI, MNDWI,
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,
# NDBI_sd,
# NDVI_sd,
# LST_sd,
abundance, rich,
survey_year
))
corplot1 <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
var.cont <- data.frame(data.spr) %>%
select(c(NDBI, NDBI_prevsum, #NISI, NDISI, ENDISI,
NDVI,
#SAVI, MNDWI,
# NDBI_sd,    # highly correlated with LST_sd and NDVI_prevsum
# NDVI_sd,
# LST_sd,
NDVI_prevsum,   # highly correlated with NDBI
LST, LST_prevsum,
ppt_sum, ppt_sum_prevsum,
temp_max, temp_max_prevsum,
temp_min, temp_min_prevsum,   # r > 0.6 with temp_max and temp_max_t0
# NDVI_winter,
# LST_winter,
# ppt_sum_winter, # r = -0.62 with temp_max_winter
# temp_max_winter,
# temp_min_winter,
abundance, rich,
survey_year
))
corplot2 <- ggcorrplot(cor((var.cont), use = "complete.obs", method = "spearman"),
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 2.5,
outline.color = "white")
corplot1
corplot2
# the monsoon seasons has become hotter and wetter?
plot((data.win$survey_year-1), data.win$ppt_sum_prevsum)
plot((data.win$survey_year-1), data.win$LST_prevsum)
ggsave("~/GitHub/caplter-birdcommunitydynamics/figures/collinearity_envvariables_corebirds_1winter.png",
corplot1,
width = 6,
height = 4,
units = "in",
dpi = 300)
ggsave("~/GitHub/caplter-birdcommunitydynamics/figures/collinearity_envvariables_corebirds_2spring.png",
corplot2,
width = 6,
height = 4,
units = "in",
dpi = 300)
